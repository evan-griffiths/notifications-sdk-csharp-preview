/*
 * FINBOURNE Notifications API
 *
 * Contact: info@finbourne.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Finbourne.Notifications.Sdk.Client;
using Finbourne.Notifications.Sdk.Api;
// uncomment below to import models
//using Finbourne.Notifications.Sdk.Model;

namespace Finbourne.Notifications.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing NotificationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class NotificationsApiTests : IDisposable
    {
        private NotificationsApi instance;

        public NotificationsApiTests()
        {
            instance = new NotificationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of NotificationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' NotificationsApi
            //Assert.IsType<NotificationsApi>(instance);
        }

        /// <summary>
        /// Test CreateNotification
        /// </summary>
        [Fact]
        public void CreateNotificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scope = null;
            //string code = null;
            //CreateNotificationRequest createNotificationRequest = null;
            //var response = instance.CreateNotification(scope, code, createNotificationRequest);
            //Assert.IsType<Notification>(response);
        }

        /// <summary>
        /// Test DeleteNotification
        /// </summary>
        [Fact]
        public void DeleteNotificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scope = null;
            //string code = null;
            //string id = null;
            //instance.DeleteNotification(scope, code, id);
        }

        /// <summary>
        /// Test GetNotification
        /// </summary>
        [Fact]
        public void GetNotificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scope = null;
            //string code = null;
            //string id = null;
            //var response = instance.GetNotification(scope, code, id);
            //Assert.IsType<Notification>(response);
        }

        /// <summary>
        /// Test ListNotifications
        /// </summary>
        [Fact]
        public void ListNotificationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scope = null;
            //string code = null;
            //var response = instance.ListNotifications(scope, code);
            //Assert.IsType<ResourceListOfNotification>(response);
        }

        /// <summary>
        /// Test UpdateNotification
        /// </summary>
        [Fact]
        public void UpdateNotificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string scope = null;
            //string code = null;
            //string id = null;
            //UpdateNotificationRequest updateNotificationRequest = null;
            //var response = instance.UpdateNotification(scope, code, id, updateNotificationRequest);
            //Assert.IsType<Notification>(response);
        }
    }
}
